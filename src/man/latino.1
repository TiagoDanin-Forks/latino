.TH Latino manual "Licencia MIT" "Primitivo"
.SH Introducción
\fBLatino es un nuevo lenguaje de programación para el público en general.\fR
.PP
¿Para qué aprender una nueva sintaxis?
.PP
Hemos visto varios lenguajes de programación, pero ¿Cuándo un lenguaje fácil y en español?
.br
Es cierto que ya existen desarrollados lenguajes en español, pero la idea de Latino, es crear un lenguaje totalmente fácil tanto para niños como para adultos siendo un lenguaje de programación avanzado.
.PP
¿Que tanto puedo hacer con Latino?
.br
Lo mismo que en cualquier lenguaje de programación, incluye como \fIfunciones\fR
.PP
.PP
.SH Aprendiendo a programar
.PP
.IR Incluir
.PP
En Latino se puede incluir otros módulos de Latino ó módulos en la misma carpeta, como la mayoría de lenguajes de programación.
La forma de incluir es bastante fácil.
.PP
La sintaxis es la siguiente:
.RS
.BR incluir('mi_modulo')
.RE
.PP
Como ejemplo, podriamos crear un llamado \fBmi_modulo.lat\fR y lo incluimos con la sintaxis anterior.
.br
Podremos agregar una \fIfuncion\fR y llamarla en otro código incluyendo el módulo \fBmi_modulo\fR (con la misma sintaxis anterior)
.br
Posteriormente, podemos crear cualquier función en el modulo para así, no necesitar crear de nuevo las mismas funciones.
.PP
.IR Funciones
.PP
También, podemos crear funciones incluyendo parametros entre parentesis \fB()\fR
.PP
La sintaxis sería la siguiente:
.RS
.BR funcion()
.br
    # código
.br
.BR fin
.RE
.PP
.IR Comentarios
.PP
Si queremos añadir comentarios en el código, podemos hacerlo de varias formas.
.PP
Comentarios simples:
.RS
\fB//\fR este es un ejemplo de comentario de una línea
.br
\fB#\fR este es otro ejemplo de comentario
.RE
.PP
Comentarios múltiples:
.RS
\fB/*\fR
.br
Este es un
.br
comentario
.br
múltiple
.br
\fB*/\fR
.RE
.PP
.IR Variables
.PP
Podemos declarar una variable simple, para en sí, llamar a funciones de una forma simple.
.PP
Sintaxis de valores declarados:
.br
.RS
\fBmi_valor=\fR"texto"
.br
\fBmi_otro_valor = \fR"prueba"
.RE
.PP
Como vemos, a diferencia de otras sintaxis, no importa si el valor declarado lleva el símbolo \fB=\fR entre espacios ó no.
.PP
.IR Imprimir
.PP
También, \fILatino\fR tiene múltiple sintaxis para impresión de texto.
.PP
Las sintaxis son las siguientes:
.br
.RS
\fBescribir(\fR"hola mundo"\fB)\fR
.br
\fBimprimir(\fR"hola mundo"\fB)\fR
.RE
.PP
.IR Expresiones
.PP
Además, podremos crear expresiones con la impresión de texto, pondremos un ejemplo con \fBescribir()\fR
.PP
Sintaxis:
.br
.RS
\fBescribir(1 + 2)\fR
.RE
.br
Ó, en valores declarados:
.RS
\fBa = 1\fR
.br
suma = \fBa + 2\fR
.br
\fBescribir(\fRsuma\fB)\fR
.RE
.PP
Los operadores de expresión son los siguientes:
.br
.RS
\fB+
.br
-
.br
*
.br
/
.br
%\fR
.RE
.PP
.IR Condiciones
.PP
Podemos añadir condiciones en Latino (esquema de decisión condicional)
.br
En otras programaciones lo conocerás como if, else, etc.
.br
La sintaxis es la siguiente:
.br
.RS
\fB# Condición de si es verdadero ó falso\fR
.br
\fBsi\fR valor
.br
    # Código
.br
\fBfin\fR
.PP
\fB# Condición de que el valor es igual a...?\fR
.br
\fBsi\fR valor \fB== "\fRtexto\fB"\fR
.br
    # Código
.br
\fBfin\fR
.PP
\fB# Condición de que el valor no es igual a...?\fR
.br
\fBsi\fR valor \fB!= "\fRtexto\fB"\fR
.br
    # Código
.br
\fBfin\fR
.PP
\fB# Podemos ponerlo con ó sin paréntesis, es opcional.\fR
.br
\fB# Aquí unos ejemplos:\fR
.br
\fBsi (\fR valor \fB)
.br
\fBsi (\fR valor \fB==\fR "texto" \fB)\fR
.RE
.PP
.IR Comandos
.IR externos
.PP
Podemos añadir comandos que se ejecuten de forma externa en el sistema
.br
ya sea con retorno ó sin retorno para una simple ejecución
.PP
Sintaxis:
.RS
\fB# Sin retorno de la salida:\fR
.br
\fBsistema("\fRcomando\fB")\fR
.PP
\fB# Con retorno de la salida:\fR
.br
\fBejecutar_pipe("\fRcomando\fB")\fR
.RE
.PP
.IR Bucle
.PP
Podemos crea un bucle, para así, no salir del script y continue siempre
.br
ejecutándose ó que termine hasta cierta condición.
.PP
Sintaxis:
.RS
\fB# Creará un bucle infinito\fR
.br
\fBmientras verdadero\fR
.br
    # Código
.br
\fBfin\fR
.PP
.RE
Véase más en ejemplo #06 del Github de Latino.
.PP
.IR Leer
.PP
Podemos crear además valores para que sean leídos en Latino.
.PP
Sintaxis:
.RS
valor = \fBleer()\fR
.br
\fBescribir("\fREl valor es \fB".\fRvalor\fB)\fR
.RE
.SH Copyright
.PP
Se concede permiso, de forma gratuita, a cualquier persona que obtenga una copia
de este software y archivos de documentacion asociados (el "Software"), para hacer frente
el Software sin restriccion, incluyendo sin limitacion, los derechos
para usar, copiar, modificar, fusionar, publicar, distribuir, sublicenciar y / o vender
las copias del Software y permitir a las personas a las que el Software es
amueblado para hacerlo, con sujecion a las siguientes condiciones:

El aviso de copyright anterior y este aviso de permiso se incluiran en
todas las copias o partes sustanciales del Software.

EL SOFTWARE SE PROPORCIONA "TAL CUAL", SIN GARANTIA DE NINGUN TIPO, EXPRESA O
IMPLICITAS, INCLUYENDO PERO NO LIMITADO A LAS GARANTIAS DE COMERCIALIZACION,
IDONEIDAD PARA UN PROPOSITO PARTICULAR Y NO INFRACCION. EN NINGUN CASO EL
AUTORES O TITULARES DEL COPYRIGHT SERAN RESPONSABLES POR NINGUN RECLAMO, DAÑO U OTRA
RESPONSABILIDAD, YA SEA EN UNA ACCION DE CONTRATO, AGRAVIO O CUALQUIER OTRA FORMA, DERIVADOS DE,
DE O EN RELACION CON EL SOFTWARE O EL USO U OTROS TRATOS EN
EL SOFTWARE.
